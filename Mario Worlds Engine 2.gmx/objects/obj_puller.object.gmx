<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_small_pull</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario is pulling something!

//Default pull
pulled = noone;

//Do not animate
image_speed = 0;
image_index = 0;

//Pull up
alarm[0] = 95;

//Sweat if it's big
alarm[3] = 2;

//Is Mario pulling something heavy?
isheavy = 0;

//Whether Mario is done pulling
ready = 0;

//Whether Mario pulled up the item
pullout = 0;

//Make Mario stop and make him invisible
with (obj_mario) {

    //Stop moving
    speed = 0;
    
    //Make him invisible
    visible = false;
    
    //Disable controls
    disablecontrol = true;
}

//Make Mario stop spinning
with (obj_spinner) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario visible

with (obj_mario) {

    visible = 1;
    holding = 0;
    disablecontrol = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sweat if Mario is pulling something big.

alarm[3] = 8;
if (isheavy) {

    with (instance_create(x,bbox_top,obj_smoke)) {
    
        //Motion
        motion_set(random_range(45,135),random_range(0.5,1));
        
        //Animation
        image_speed = 0.1;
        
        //Gravity
        gravity = 0.05;
        
        //Sprite
        sprite_index = spr_sweat;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pull out

pullout = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario is done pulling.

//Do not animate
image_speed = 0;

//Pull out
alarm[2] = 8;

//Check if Mario is done pulling
if (!ready)
    alarm[1] = 20;
else
    alarm[1] = 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the sprite

//Small Mario
if (global.powerup == cs_small)
    sprite_index = spr_mario_small_pull;

//Big Mario
else if (global.powerup == cs_big)
    sprite_index = spr_mario_big_pull;    

//Fire Mario
else if (global.powerup == cs_fire)
    sprite_index = spr_mario_fire_pull;    

//Raccoon Mario
else if (global.powerup == cs_leaf)
    sprite_index = spr_mario_raccoon_pull;    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Puller logic

//If Mario has died while pulling.
if (instance_exists(obj_mario_dead)) {

    instance_destroy();
    exit;
}

//Snap into position
x = obj_mario.x;
y = obj_mario.y;

//Keep Mario invisible
if (obj_mario.y &gt; ystart) {

    //With Mario
    with (obj_mario) {
    
        //Make him invisible
        visible = false;
        
        //Stop him
        speed = 0;
        
        //Snap in place
        y = other.ystart;
    }
}

//If the object is heavy enough and the control key is not longer held.
if ((isheavy) &amp;&amp; (!keyboard_check(vk_control)))
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Mario

//Set up palette shader
if (obj_mario.isflashing &gt; 0) {

    pal_swap_set(obj_mario.pal_sprite,obj_mario.pal);
}

//Draw Mario
draw_sprite_ext(sprite_index,-1,round(x),round(y)+1,obj_mario.xscale,1,0,c_white,obj_mario.image_alpha);

//Reset the shader
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
