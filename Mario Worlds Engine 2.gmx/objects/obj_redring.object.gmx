<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ring</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A red coin ring

/*
**  This item uses creation code!
**
**  sprout = Pick from below
**      cs_fire             =       Fireflower
**      cs_leaf             =       Leaf
**
**  coin_x[0] = X position of the coin. (Repeat as many coins you want to be spawned by this ring)
**  coin_y[0] = Y position of the coin. (Repeat as many coins you want to be spawned by this ring)
*/

//Default variables:
sprout = cs_fire;
coin_x[0] = xstart;
coin_y[0] = ystart;

//Destroy if this ring has been touched before
if (ds_map_find_value(global.redrings,id)) {

    instance_destroy();
    exit;
}

//Animate
image_speed = 0.5;

//Whether this object has been activated
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset up the red coins variable

global.redcoins = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy ring and all active coins

//Destroy coins
for (i=0; i&lt;array_length_1d(coin); i++;) {

    if (instance_exists(coin[i]))
        with (coin[i]) instance_destroy();
}

//Destroy the ring
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Warn the player that the coins are going to be destroyed.

audio_play_sound(snd_timer_end, 0, false);
audio_stop_sound(snd_timer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if Mario collected all coins and give him a prize for doing so.

//If the ring is active.
if (ready) {

    //If there's not red coins.
    if (instance_number(obj_coin_red) == 0) {
    
        //Play 'Drop' sound
        audio_play_sound(snd_drop, 0, false);
        
        //Stop 'Timer' sounds
        audio_stop_sound(snd_timer_end);
        audio_stop_sound(snd_timer);
        
        //Create prize
        with (instance_create(0,0,obj_powerupprize)) {
        
            //If Mario is small
            if (global.powerup == cs_small) {
            
                sprite_index = spr_mushroom;
            }
            
            //Otherwise, if Mario is big
            else if (global.powerup == cs_big) {
            
                //Check what item does this item give.
                switch (other.sprout) {
                
                    //Fire Flower
                    case (cs_fire): {
                    
                        sprite_index = spr_fireflower;
                    } break;
                    
                    //Leaf
                    case (cs_leaf): {
                    
                        sprite_index = spr_leaf;
                    } break;
                }
            }
            
            //Otherwise, get a life.
            else {
            
                //1-UP
                sprite_index = spr_1up;
            }
        }
        
        //Destroy the ring
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Activate the coins

//If the ring has not been activated.
if (!ready) {

    if ((other.hspeed &gt; 0) &amp;&amp; (other.x &gt; x)) 
    || ((other.hspeed &lt; 0) &amp;&amp; (other.x &lt; x)) {

        //Play 'Ring' and 'Timer' sound
        audio_play_sound(snd_ring, 0, false);
        audio_play_sound(snd_timer, 0, true);
    
        //Create the coins
        for (i=0; i&lt;array_length_1d(coin_x); i++;) {
        
            coin[i] = instance_create(coin_x[i],coin_y[i],obj_coin_red);
        }
        
        //Activate
        ready = 1;
        
        //Countdown
        alarm[0] = 720;
        
        //Destroy all not collected coins
        alarm[1] = 900;
        
        //Change the sprite
        sprite_index = spr_ring_active;
        image_index = 0;
        
        //Prevent the coins from re-appearing
        ds_map_add(global.redrings,id,1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make it invisible if active

if (sprite_index == spr_ring_active) {

    //Do not animate
    image_speed = 0;
    image_index = 6;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
