<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_qblock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_blockparent</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Standard question mark block

/*
//  This item uses creation code.
//
//  sprout = Pick from below. (Default is cs_coin)
//      cs_coin             =       1 coin
//      cs_coins            =       10 coins
//      cs_big              =       Mushroom
//      cs_fire             =       Mushroom / Fireflower
//      cs_leaf             =       Mushroom / Leaf
//      cs_1up              =       1-UP Mushroom
//      cs_poison           =       Poison Mushroom
//      cs_starman          =       Starman
//      cs_trampoline       =       Trampoline
//      cs_pswitch          =       P-Switch
//      cs_gswitch          =       Gray P-Switch
//      cs_pow              =       POW Block
//      cs_beanstalk        =       Beanstalk
//      cs_beanstalk_alt    =       Alt. Beanstalk
//      cs_key              =       Key
//      cs_yoshi            =       Yoshi
//      cs_yoshi_g          =       Green Yoshi
//      cs_yoshi_r          =       Red Yoshi
//      cs_yoshi_y          =       Yellow Yoshi
//      cs_yoshi_b          =       Blue Yoshi
*/

//Default item:
sprout = cs_coin;

//Animate
image_speed = 0.25;

//Perform inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish block bump

//Stop vertical movement
vspeed = 0;
y = ystart;

//Sprout out an item
event_user(1);

//Turn into a used block
instance_change(obj_qblock_empty,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprout out an item

//Create up a item.
with (instance_create(xstart,ystart,obj_powerupsprout)) {

    switch (other.sprout) {
    
        //Mushroom (cs_big)
        case (cs_big): {
        
            sprite_index = spr_mushroom;
        } break;
        
        //Fireflower (cs_fire)
        case (cs_fire): {
        
            //If health mode is NOT activated.
            if (global.healthmode == false) {
            
                //If Mario is not big
                if (global.powerup == cs_small) {
                
                    //Mushroom
                    sprite_index = spr_mushroom;
                }
                
                //Otherwise, if Mario is NOT small
                else if (global.powerup != cs_small) {
                
                    //Fireflower
                    sprite_index = spr_fireflower;
                }
            }
            
            //Otherwise, if health mode is activated.
            else 
                sprite_index = spr_fireflower;
        } break;
        
        //Raccoon Leaf (cs_leaf)
        case (cs_leaf): {
        
            //If health mode is NOT activated.
            if (global.healthmode == false) {
            
                //If Mario is not big
                if (global.powerup == cs_small) {
                
                    //Mushroom
                    sprite_index = spr_mushroom;
                }
                
                //Otherwise, if Mario is NOT small
                else if (global.powerup != cs_small) {
                
                    //Fireflower
                    sprite_index = spr_leaf;
                }
            }
            
            //Otherwise, if health mode is activated.
            else 
                sprite_index = spr_leaf;
        } break;
        
        //1up
        case (cs_1up): {
        
            sprite_index = spr_1up;
        } break;
        
        //Poison
        case (cs_poison): {
        
            sprite_index = spr_poison;
        } break;
        
        //Starman
        case (cs_starman): {
        
            sprite_index = spr_starman;
        } break;
        
        //Beanstalk
        case (cs_beanstalk): {
        
            sprite_index = spr_beanstalk;
        } break;
        
        //Beanstalk
        case (cs_beanstalk_alt): {
        
            sprite_index = spr_beanstalk_alt;
        } break;
        
        //If none of the items above matches, destroy.
        default: instance_destroy(); break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a coin if selected.

//Coin
if (sprout == cs_coin)
    instance_create(x,ystart-16,obj_blockcoin);
    
//10 Coins
else if (sprout == cs_coins) {

    //Play 'Dragon coin' sound
    audio_play_sound(snd_coin_dragon, 0, false);

    //Create 10 coins.
    repeat(10) {
    
        ID = instance_create(x,ystart-17,obj_blockcoin_b);
        with (ID) {
        
            //Set the horizontal speed
            hspeed = random_range(1.5,-1.5);

            //Set the vertical speed
            vspeed = random_range(-1,-6);
        }
    }
}

//Trampoline
else if (sprout == cs_trampoline) {

    //Play 'Sprout' sound.
    audio_play_sound(snd_sprout, 0, false);
    
    //Create smoke
    instance_create(x,ystart-8,obj_smoke);
    
    //Create a spring board.
    with (instance_create(x,ystart-17,obj_trampoline))
        vspeed = -2.5;
}

//P-Switch
else if (sprout == cs_pswitch) {

    //Play 'Sprout' sound.
    audio_play_sound(snd_sprout, 0, false);
    
    //Create smoke
    instance_create(x,ystart-8,obj_smoke);
    
    //Create a spring board.
    with (instance_create(x,ystart-17,obj_pswitch))
        vspeed = -2.5;
}

//Gray P-Switch
else if (sprout == cs_gswitch) {

    //Play 'Sprout' sound.
    audio_play_sound(snd_sprout, 0, false);
    
    //Create smoke
    instance_create(x,ystart-8,obj_smoke);
    
    //Create a spring board.
    with (instance_create(x,ystart-17,obj_gswitch))
        vspeed = -2.5;
}

//POW Block
else if (sprout == cs_pow) {

    //Play 'Sprout' sound.
    audio_play_sound(snd_sprout, 0, false);
    
    //Create smoke
    instance_create(x,ystart-8,obj_smoke);
    
    //Create a spring board.
    with (instance_create(x,ystart-17,obj_powblock))
        vspeed = -2.5;
}

//Key
else if (sprout == cs_key) {

    //Play 'Sprout' sound.
    audio_play_sound(snd_sprout, 0, false);
    
    //Create smoke
    instance_create(x,ystart-8,obj_smoke);
    
    //Create a spring board.
    with (instance_create(x,ystart-17,obj_key))
        vspeed = -2.5;
}

//Yoshi
else if (sprout &lt;= cs_yoshi) {

    //If a random Yoshi was chosen, set it now.
    if (sprout == cs_yoshi) {
    
        sprout = choose(cs_yoshi_g,cs_yoshi_r,cs_yoshi_y,cs_yoshi_b);
    }

    //Play 'Sprout' sound
    audio_play_sound(snd_sprout, 0, false);
    
    //Create a yoshi egg
    with (instance_create(x,ystart-17,obj_egg)) {
    
        //Check the constant and return the colour.
        switch (other.sprout) {
        
            case (cs_yoshi_g): //Green Yoshi         
                colour = 0; break;
            case (cs_yoshi_r): //Red Yoshi         
                colour = 1; break;
            case (cs_yoshi_y): //Yellow Yoshi         
                colour = 2; break;
            case (cs_yoshi_b): //Blue Yoshi         
                colour = 3; break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
