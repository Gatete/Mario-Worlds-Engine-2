<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eventmarker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The HUD object (DO NOT REMOVE IT)

//Set up the frame.
frame = 0;

//Change the frame.
alarm[0] = 7;

//Shake
shake = 0;

//Shake the counter
alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shake 'Time Left' marker

alarm[1] = 2;
if (audio_is_playing(snd_hurry)) {

    shakex = random_range(-1,1);
    shakey = random_range(-1,1);
}
else {

    shakex = 0;
    shakey = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change the frame

//Change the frame.
frame = !frame;
alarm[0] = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the HUD

//Set up the font
draw_set_font(global.hud_numbers);

//Set up the colour
draw_set_colour(c_white);

//Mario
draw_sprite_ext(spr_hud_mario,-1,view_xview[0]+8,view_yview[0]+12,1,1,0,c_white,1);
draw_text(view_xview[0]+36,view_yview[0]+14,string_format(lives,2,0));

//Set up the font
draw_set_font(global.hud_numbers_g);

//Coins
draw_sprite_ext(spr_hud_coin,-1,view_xview[0]+8,view_yview[0]+32,1,1,0,c_white,1);
draw_text(view_xview[0]+36,view_yview[0]+34,string_format(global.coins,2,0));

//Set up the font
draw_set_font(global.hud_numbers);

//Score
draw_sprite_ext(spr_hud_score,-1,view_xview[0]+293,view_yview[0]+8,1,1,0,c_white,1);
draw_text(view_xview[0]+257,view_yview[0]+15,string_add_zeros(score,9));

//Timer
if ((global.time &gt;= 0) &amp;&amp; (global.time &lt; 101)) {

    draw_sprite_ext(spr_hud_time,-1,view_xview[0]+351+shakex,view_yview[0]+8+shakey,1,1,0,c_white,1);
    draw_text_colour(view_xview[0]+344+shakex,view_yview[0]+15+shakey,string_format(global.time,4,0),c_red,c_red,c_red,c_red,1);
}
else {

    draw_sprite_ext(spr_hud_time,-1,view_xview[0]+351,view_yview[0]+8,1,1,0,c_white,1);
    draw_text(view_xview[0]+344,view_yview[0]+15,string_format(global.time,4,0));           
}

//P-Meter
if (instance_exists(obj_mario)) { //If Mario does exist.

    //If Mario is running at full speed.
    if (obj_mario.pmeter &gt;= 112) {
    
        //Draw full P-Meter.
        draw_sprite_ext(spr_hud_pmeter,6+frame,view_xview[0]+8,view_yview[0]+191,1,1,0,c_white,1);
    }
    else { //Otherwise, if Mario is not running.
    
        //Draw a filling P-Meter.
        draw_sprite_ext(spr_hud_pmeter,round(0+obj_mario.pmeter/18.6),view_xview[0]+8,view_yview[0]+191,1,1,0,c_white,1);        
    }
}
else {

    draw_sprite_ext(spr_hud_pmeter,0,view_xview[0]+8,view_yview[0]+191,1,1,0,c_white,1);
}

//Health
if (global.healthmode) {

    //Max. Health
    var a = 0;
    repeat(4) {
    
        draw_sprite_ext(spr_hud_heart,1,view_xview[0]+361,view_yview[0]+36+(a*18),1,1,0,c_white,1);
        a++;
    }
    
    //Health
    var b = 0;
    repeat(health) {
    
        draw_sprite_ext(spr_hud_heart,0,view_xview[0]+361,view_yview[0]+36+(b*18),1,1,0,c_white,1);
        b++;
    }
}

//Green Stars
draw_sprite_ext(spr_hud_greenstars,-1,view_xview[0]+8,view_yview[0]+52,1,1,0,c_white,1);

//Reserve Box
draw_sprite_ext(spr_reservebottom,0,view_xview[0]+177,view_yview[0]+8,1,1,0,c_white,1);

//Reserve Item
if (global.reserveitem != cs_small)
    draw_sprite_ext(spr_reservebottom_items,global.reserveitem-1,view_xview[0]+184,view_yview[0]+13,1,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
