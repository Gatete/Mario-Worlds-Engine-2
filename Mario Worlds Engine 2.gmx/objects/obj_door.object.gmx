<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A door, warp to another destination with it.

/*
**  This item uses creation code!
**
**  postchange = Pick from below: (Optional)
**      0: Mario
**      1: Warp Mario
**
**  postx = New x coordinate
**  posty = New y coordinate
**  myroom = Destination room (Optional)
*/

//Default Values:
postchange = -1
postx = 0
posty = 0
myroom = room_next(room)

//Do not animate
image_speed = 0;
image_index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///What happens after Mario enters the door (Instant)

//If the door leads to another room.
if (postchange != -1) {

    //Remember what needs to be created at what coordinates
    global.postchange = postchange;
    global.postx = postx+8;
    global.posty = posty+16;

    //Go to the set room
    room_goto(myroom);
}

//Otherwise, if the door just leads to another place in the SAME room.
else {

    //If the position change exists, create Mario at that position
    if (postx != xstart)
    &amp;&amp; (posty != ystart) {
    
        //With Mario
        with (obj_mario) {
        
            //Stop movement
            speed = 0;
            gravity = 0;
                    
            //Warp to the new destination.
            x = other.postx+8;
            y = other.posty+16;
        }
    }

    //Otherwise, have Mario come out the same door
    else {
    
        //With Mario
        with (obj_mario) {
        
            //Stop movement
            speed = 0;
            gravity = 0;
        
            //Warp to the new destination
            x = other.xstart+8;
            y = other.ystart;
        }
    }

    //Notify the level manager
    with (obj_levelmanager) {
    
        barrier = 1;
        alarm[6] = 2;
    }

    //Fade the screen
    with (obj_persistent) {
    
        event_user(0);
        size = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End animation and warp Mario

image_speed = 0;
image_index = 1;

//If the door leads to another room.
if (postchange != -1) {

    //Remember what needs to be created at what coordinates
    global.postchange = postchange;
    global.postx = postx+8;
    global.posty = posty+16;

    //Go to the set room
    room_goto(myroom);
}

//Otherwise, if the door just leads to another place in the SAME room.
else {

    //If the position change exists, create Mario at that position
    if (postx != xstart)
    &amp;&amp; (posty != ystart)    
        instance_create(postx+8,posty+16,obj_mario);

    //Otherwise, have Mario come out the same door
    else    
        instance_create(xstart+8,ystart,obj_mario);

    //Remember if something is being held if Mario is not riding a Yoshi        
    obj_mario.holding = obj_mario_door.holding;

    //Notify the level manager
    with (obj_levelmanager) {
    
        barrier = 1;
        alarm[6] = 2;
    }
    
    //Destroy door Mario.
    with (obj_mario_door) instance_destroy();

    //Fade the screen
    with (obj_persistent) {
    
        event_user(0);
        size = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the door

//Draw the inside part of the door.
if (image_index &lt; 5) {

    draw_sprite(sprite_index,0,round(x),round(y));
}

//Draw the door.
draw_sprite(sprite_index,image_index,round(x),round(y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Warp Mario into another location

//If Mario does exists.
if (instance_exists(obj_mario)) {

    //If Mario is overlapping the door and it's not jumping.
    if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_mario,0,0)) 
    &amp;&amp; (obj_mario.state &lt; cs_state_jump) {
    
        //Play 'door' sound
        audio_play_sound(snd_door,0,false);
        
        //If Mario is NOT riding Yoshi.
        if (global.yoshi == 0) {
        
            //Animate the door
            image_speed = 0.2;
        
            //Make Mario enter the door.
            with (instance_create(x+8,y,obj_mario_door)) {
            
                image_xscale = obj_mario.xscale;
                doorsprite = other.sprite_index;
            }
            
            //Destroy Mario
            with (obj_mario) instance_destroy();
        }
        
        //Otherwise, warp to the assigned room.
        else 
            alarm[0] = 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
