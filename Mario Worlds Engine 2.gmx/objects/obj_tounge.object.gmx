<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_yoshi_tounge</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Yoshi's tongue

//Did Yoshi eat something?
hunger = 0;

//What the food looks like
foodsprite = noone;
foodindex = 0;
foodoffset = 0;

//Eaten powerup
powerup = noone;

//State variable
ready = 0;

//Tongue offset values
t2 = 0;
t3 = 0;
t4 = 0;
t5 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Yoshi pull out his tounge

ready = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tongue logic

//If Mario and Yoshi exist
if ((instance_exists(obj_mario)) &amp;&amp; (instance_exists(obj_yoshi))) {

    //Where the tongue should be drawn
    if (obj_yoshi.sprite_index == spr_yoshi_lick_alt) {
    
        tongue1x = obj_yoshi.x-3+19*obj_mario.xscale;
        tongue2x = t2*obj_mario.xscale+tongue1x;
        tongue3x = t3*obj_mario.xscale+tongue1x;
        tongue4x = t4*obj_mario.xscale+tongue1x;
    }
    else {
    
        tongue1x = obj_yoshi.x-3+13*obj_mario.xscale;
        tongue2x = t2*obj_mario.xscale+tongue1x;
        tongue3x = t3*obj_mario.xscale+tongue1x;
        tongue4x = t4*obj_mario.xscale+tongue1x;     
    }

    //Actual tongue location
    x = round(t5*obj_mario.xscale+tongue1x);
    if (obj_yoshi.locked = 2)
        y = obj_yoshi.y+4;
    else
        y = obj_yoshi.y-7;

    //If Yoshi is moving his tongue out
    if (ready == 0) {

        //Increment tongue offset values
        if (t2 != 8)
            t2 += 4;
        if (t3 != 16)
            t3 += 4;
        if (t4 != 24)
            t4 += 4;
        if (t5 != 32)
            t5 += 4;

        //If the tongue is all the way out, pull it back in
        else if (ready != 1) {
        
            ready = 1;
            alarm[0] = 8;
        }
    }

    //If Yoshi is pulling back his tongue
    else if (ready == 2) {

        //Decrement tongue offset values
        if (t2 != 0)
            t2 -= 4;
        if (t3 != 0)
            t3 -= 4;
        if (t4 != 0)
            t4 -= 4;
        if (t5 != 0)
            t5 -= 4;

        //If the tongue is all the way in
        else {
        
            //Close Yoshi's mouth
            obj_yoshi.alarm[1] = 5;

            //If something was eaten
            if (hunger) {

                //If a powerup was eaten, place it in Yoshi
                if (powerup != noone) {
                
                    obj_yoshi.powerup = powerup;
                    powerup = noone;
                }

                //If Yoshi's mouth is not full, swallow
                else if (obj_yoshi.mouthholder == noone)                
                    audio_play_sound(snd_eat, 0, false);
            }

            //Destroy
            instance_destroy()
        }
    }
}

//Otherwise, stop licking and destroy
else {

    with (obj_yoshi) {
    
        licking = 0;
        locked = 0;
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_powerupswap">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat powerups

if (hunger = 0) {

    //Item eaten
    hunger = 1;

    //Move tongue back
    ready = 1;
    alarm[0] = 8;

    //Food sprite
    foodsprite = other.sprite_index;

    //Food offset
    foodoffset = 8;

    //Remember powerup eaten
    switch (other.sprite_index) {
    
        //Mushroom
        case (spr_mushroom): 
            powerup = obj_mushroom; break;
            
        //Fire Flower
        case (spr_fireflower):
            powerup = obj_fireflower; break;
            
        //Leaf
        case (spr_leaf):
            powerup = obj_leaf_static; break;
            
        //Starman
        case (spr_starman):
            powerup = obj_starman; break;
    }

    //Destroy food
    with (other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_leaf">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat powerups

if (hunger = 0) {

    //Item eaten
    hunger = 1;

    //Move tongue back
    ready = 1;
    alarm[0] = 8;

    //Food sprite
    foodsprite = other.sprite_index;

    //Food offset
    foodoffset = 8;

    //Remember powerup eaten
    powerup = other.object_index;

    //Destroy food
    with (other) instance_destroy();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_holdparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat held items

if (!hunger) {

    //Item eaten
    hunger = 1;

    //Move tongue back
    ready = 1;
    alarm[0] = 8;

    //Put it in Yoshi's mouth
    obj_yoshi.mouthholder = other.object_index;

    //Remember its sprite
    obj_yoshi.mouthsprite = other.sprite_index;

    //Food sprite
    foodsprite = other.sprite_index;

    //Food offset
    foodoffset = 8;

    //Destroy food
    with (other) instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_powerupparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat powerups

if (hunger = 0) {

    //Item eaten
    hunger = 1;

    //Move tongue back
    ready = 1;
    alarm[0] = 8;

    //Food sprite
    foodsprite = other.sprite_index;

    //Food offset
    foodoffset = 8;

    //Remember powerup eaten
    powerup = other.object_index;

    //Destroy food
    with (other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_throwblock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat bricks

if (!hunger) {

    //Item eaten
    hunger = 1;

    //Move tongue back
    ready = 1;
    alarm[0] = 8;

    //Put it in Yoshi's mouth
    obj_yoshi.mouthholder = obj_throwblock_th;
    
    //Remember its sprite
    obj_yoshi.mouthsprite = spr_throwblock_th;
    
    //Food sprite
    foodsprite = spr_throwblock_th;

    //Food offset
    foodoffset = 8;

    //Destroy food
    with (other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Tongue

//Draw eaten item
if (hunger) {

    draw_sprite(foodsprite,foodindex,x+3+3*obj_mario.xscale-foodoffset,y-4)
}

//Draw tongue parts
draw_sprite_ext(spr_yoshi_tounge,1,tongue1x+3-3*obj_mario.xscale,y,obj_mario.xscale,1,0,c_white,1)
draw_sprite_ext(spr_yoshi_tounge,1,tongue2x+3-3*obj_mario.xscale,y,obj_mario.xscale,1,0,c_white,1)
draw_sprite_ext(spr_yoshi_tounge,1,tongue3x+3-3*obj_mario.xscale,y,obj_mario.xscale,1,0,c_white,1)
draw_sprite_ext(spr_yoshi_tounge,1,tongue4x+3-3*obj_mario.xscale,y,obj_mario.xscale,1,0,c_white,1)
draw_sprite_ext(spr_yoshi_tounge,0,x+3-3*obj_mario.xscale,y,obj_mario.xscale,1,0,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
